//---------------------------------------------------------------------
// COLUMN VARIABLES are generated in JS calcGridCol() function
//---------------------------------------------------------------------
$max-columns: 18;

@include cssvar-set(
  (
    max-columns: #{$max-columns},
    current-columns: '',
    object-gap: clamp(2rem, 2rem + 1.1vw, 5rem),
    item-gap: clamp(1rem, 1rem + 1vw, 2rem),
    spacer: 1rem,

    // clamp(min size, set size when computed, max size)
    // min(set size, min size when computed)
    // max(set size, max size when computed)
    container-padding: clamp(2rem, 1rem + 5vw, 6rem)
      clamp(var(--current-columns) * 1px, 1rem, 10vw) clamp(3rem, 2rem + 5vw, 6.5rem),
  )
);

$spacer: var(--spacer) !default;

$place-start: start !default;
$place-center: center !default;

$page-breakpoints: (
  xs: 0,
  sm: 512,
  md: 768,
  lg: 1024,
  xl: 1280,
  xxl: 1536,
);

//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
//
// LAYOUT MIXINS
//
//
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@mixin flex-base() {
  display: flex;
  flex: 1 1 100%;
  @include transition-props();
}

// area types
//---------------------------------------------------------------------
@mixin row() {
  flex-flow: row wrap;
  gap: var(--object-gap);
  place-content: $place-center;
}

@mixin col() {
  flex-flow: column wrap;
  gap: var(--item-gap);
  place-content: $place-start;
  place-items: $place-start;
  > img,
  > video {
    width: 100%;
    max-width: 100%;
  }
}

// fill types
//---------------------------------------------------------------------
@mixin width-fixed($i) {
  @include breakpoint(sm) {
    max-width: calc(var(--current-columns) * 100px);
    flex: 0 1 calc(($i * 100px) - (var(--object-gap) / 2));
  }
}

@mixin width-fill($i) {
  @include breakpoint(md) {
    flex: 0 1 calc(($i * 10%));
  }
}

// CARD column
//---------------------------------------------------------------------
@mixin column-outline($invert: false, $alt: false) {
  place-self: center;
  place-content: center;
  padding: clamp(3rem, 3rem + 1vw, 3.5rem) clamp(1rem, 1rem + 3vw, 4rem)
    clamp(3.3rem, 3.3rem + 1vw, 3.8rem);
  border-radius: 1rem;
  background-color: var(--bg);
  border: 3px solid var(--accent);

  @if $invert {
    color: var(--bg);
    background-color: var(--text);
    border: 3px solid rgba(0, 0, 0, 0);
  }
}

//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
//
// LAYOUT CLASSES
//
//
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

// container
//---------------------------------------------------------------------
.container {
  @include flex-base();
  @include row;

  max-width: calc(var(--max-columns) * 100px);

  margin: 0 auto;
  padding: 6rem 1rem; //clamp(2rem, calc(2 * 5vw), 10rem) 1rem;

  &.full {
    max-width: 100vw;
    margin: 0;
    padding: 0;
  }
}

.col-f {
  @include col();
  flex: 1 1 auto;
}

.row-f {
  @include row();
  flex: 1 1 auto;
}

@for $i from 1 through $max-columns {
  // fixed
  //---------------------------------------------------------------------
  .row-#{$i} {
    @include flex-base();
    @include row();
    @include width-fixed($i);
  }
  .col-#{$i} {
    @include flex-base();
    @include col();
    @include width-fixed($i);
  }
}
@for $i from 1 through 10 {
  // fills
  //---------------------------------------------------------------------
  .row-f#{$i} {
    @include flex-base();
    @include row();
    @include width-fill($i);
  }
  .col-f#{$i} {
    @include flex-base();
    @include col();
    @include width-fill($i);
  }
}
