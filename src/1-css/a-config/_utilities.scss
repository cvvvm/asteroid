//
// justification & alignment
//------------------------------------------------------------------------------------
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

// self
//---------------------------------------
@each $name, $place in $place-items {
  .js-#{$name} {
    justify-self: #{$place} !important;
  }
  .as-#{$name} {
    align-self: #{$place} !important;
  }
  .ps-#{$name} {
    place-self: #{$place} !important;
  }
}

// items
//---------------------------------------
@each $name, $place in $place-items {
  .ji-#{$name} {
    justify-items: #{$place} !important;
  }
  .ai-#{$name} {
    align-items: #{$place} !important;
  }
  .pi-#{$name} {
    place-items: #{$place} !important;
  }
}

// content
//---------------------------------------
@each $name, $place in $place-content {
  .jc-#{$name} {
    justify-content: #{$place} !important;
  }
  .ac-#{$name} {
    align-content: #{$place} !important;
  }
  .pc-#{$name} {
    place-content: #{$place} !important;
  }
}

//
// vertical height
//------------------------------------------------------------------------------------
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@for $i from 1 through 10 {
  .vh-#{$i}0 {
    min-height: #{$i * 10}vh !important;
  }
}

//
// height %
//------------------------------------------------------------------------------------
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@for $i from 1 through 10 {
  .h-#{$i}0 {
    height: #{$i * 10%} !important;
  }
}

//
// vertical width
//------------------------------------------------------------------------------------
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@for $i from 1 through 10 {
  .vw-#{$i}0 {
    min-width: #{$i * 10}vw !important;
  }
}

//
// width %
//------------------------------------------------------------------------------------
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@for $i from 1 through 10 {
  .w-#{$i}0 {
    width: #{$i * 10%} !important;
  }
}

//
// opacity
//------------------------------------------------------------------------------------
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@for $i from 1 to 10 {
  $amount: calc($i/10);

  .o-#{$i}0 {
    opacity: $amount;
  }
}

//
// margins & padding
//------------------------------------------------------------------------------------
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@each $breakpoint, $pxWidth in $page-breakpoints {
  $spacer: 1rem;
  @include breakpoint($breakpoint) {
    @each $property, $prefix in $spacer-types {
      @each $area-type, $area-prefix in $spacer-areas {
        @for $i from 0 through 10 {
          // all
          //-----------------------------------------------------------
          @if $breakpoint == 'xs' {
            @if $area-type == '' {
              .#{$prefix}x-#{$i} {
                #{$property}-right: $spacer * $i !important;
                #{$property}-left: $spacer * $i !important;
              }

              .#{$prefix}y-#{$i} {
                #{$property}-top: $spacer * $i !important;
                #{$property}-bottom: $spacer * $i !important;
              }
            }

            .#{$prefix}#{$area-prefix}-#{$i} {
              #{$property}#{$area-type}: $spacer * $i !important;
            }
          }

          //  breakpoint
          //-----------------------------------------------------------
          @else {
            @if $area-type == '' {
              .#{$prefix}x-#{$breakpoint}-#{$i} {
                #{$property}-right: $spacer * $i !important;
                #{$property}-left: $spacer * $i !important;
              }

              .#{$prefix}y-#{$breakpoint}-#{$i} {
                #{$property}-top: $spacer * $i !important;
                #{$property}-bottom: $spacer * $i !important;
              }
            }

            .#{$prefix}#{$area-prefix}-#{$breakpoint}-#{$i} {
              #{$property}#{$area-type}: $spacer * $i !important;
            }
          }
        }
      }
    }
  }
}

//
// z-index + ordering
//------------------------------------------------------------------------------------
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@each $breakpoint, $pxWidth in $page-breakpoints {
  @include breakpoint($breakpoint) {
    @for $i from 0 through 10 {
      @if $breakpoint == 'xs' {
        // order
        //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        .order-#{$i} {
          order: #{$i};
        }

        // z-index
        //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        .z-index-#{$i} {
          z-index: #{$i};
        }
      } @else {
        // order
        //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        .order-#{$breakpoint}-#{$i} {
          order: #{$i};
        }

        // z-index
        //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        .z-index-#{$breakpoint}-#{$i} {
          z-index: #{$i};
        }
      }
    }
  }
}

//
// flex + grid gaps
//------------------------------------------------------------------------------------
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@each $breakpoint, $pxWidth in $page-breakpoints {
  @include breakpoint($breakpoint) {
    @for $i from 0 through 10 {
      @if $breakpoint == 'xs' {
        //row + column gaps
        .gap-#{$i} {
          gap: #{$i}rem !important;
        }
        // row gaps
        //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        .row-gap-#{$i} {
          row-gap: #{$i}rem !important;
        }

        // column gaps
        //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        .col-gap-#{$i} {
          column-gap: #{$i}rem !important;
        }
      } @else {
        //row + column gaps
        .gap-#{$breakpoint}-#{$i} {
          gap: #{$i}rem !important;
        }
        // row gaps
        //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        .row-gap-#{$breakpoint}-#{$i} {
          row-gap: #{$i}rem !important;
        }

        // column gaps
        //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        .col-gap-#{$breakpoint}-#{$i} {
          column-gap: #{$i}rem !important;
        }
      }
    }
  }
}
